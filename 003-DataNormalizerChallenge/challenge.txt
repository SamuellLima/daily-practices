# Challenge 003: The Data Normalizer 🧹

## Scenario

In day-to-day work, it's common to receive test data from various sources, and often it comes in inconsistent formats. Before using this data in an automated test (whether to fill out a form or query a database), it needs to be cleaned and standardized.

This challenge focuses on this essential task of "data cleaning."

## 🎯 Challenge Objective

Create a Python function called `normalize_phone` that receives a `string` representing a phone number in any format and returns it containing only the numeric digits, ready to be used.

## 📋 Requirements

* The function must be named `normalize_phone` and accept one argument of type `string`.
* The function's return value must be a `string` containing only numeric characters (`0` to `9`).
* All of the following characters must be removed from the input string: `(`, `)`, `-`, `.`, and blank spaces (` `).

## Examples

| Input | Expected Output |
| :--- | :--- |
| `"(35) 99999-9999"` | `"35999999999"` |
| `"35988887777"` | `"35988887777"` |
| `" 35.91234.5678 "`| `"35912345678"` |

## ⭐ Bonus Point

For an extra challenge, try to implement the solution in a single line of code (inside the function), demonstrating a more "Pythonic" approach.

#Challenge generated by AI (Gemini)