## üáßüá∑ Desafio 008: O Inversor de Dicion√°rio

### Cen√°rio

Voc√™ est√° trabalhando com um conjunto de dados que mapeia IDs de usu√°rio para seus nomes de usu√°rio. Para uma tarefa espec√≠fica, voc√™ precisa criar uma busca reversa: encontrar o ID do usu√°rio a partir do seu nome. Sua miss√£o √© criar uma fun√ß√£o que "inverta" esse mapeamento.

### Sua Miss√£o

Escrever uma fun√ß√£o que recebe um dicion√°rio e retorna um novo dicion√°rio onde as chaves se tornam valores e os valores se tornam chaves.

### Requisitos

1.  A fun√ß√£o deve aceitar um dicion√°rio como argumento.
2.  Ela deve retornar um novo dicion√°rio com as chaves e valores trocados.
3.  **A Regra Crucial:** Se houver valores duplicados no dicion√°rio original (o que resultaria em chaves duplicadas no novo dicion√°rio), a fun√ß√£o deve agrupar as chaves originais em uma **lista**.

### Exemplos

* **Entrada:** `{'a': 1, 'b': 2, 'c': 3}`
    * **Sa√≠da Esperada:** `{1: 'a', 2: 'b', 3: 'c'}`

* **Entrada:** `{'Ana': 25, 'Bruno': 30, 'Carla': 25}`
    * **Sa√≠da Esperada:** `{25: ['Ana', 'Carla'], 30: 'Bruno'}` (Note que 'Ana' e 'Carla' foram agrupados em uma lista sob a chave 25)

* **Entrada:** `{'Ma√ß√£': 'Fruta', 'Banana': 'Fruta', 'Cenoura': 'Legume'}`
    * **Sa√≠da Esperada:** `{'Fruta': ['Ma√ß√£', 'Banana'], 'Legume': 'Cenoura'}`


### ‚≠ê Ponto de B√¥nus

Consegue resolver o desafio de forma mais concisa usando *Dictionary Comprehension* em Python?